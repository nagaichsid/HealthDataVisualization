{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/ycx/Documents/5500/cs5500/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/ycx/Documents/5500/cs5500/src/TimeSeries.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport ajax from './ajax';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Width = document.documentElement.clientWidth;\n\nvar TimeSeries = /*#__PURE__*/function (_React$Component) {\n  _inherits(TimeSeries, _React$Component);\n\n  var _super = _createSuper(TimeSeries);\n\n  function TimeSeries(props) {\n    var _this;\n\n    _classCallCheck(this, TimeSeries);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      date: [],\n      calorie: [],\n      step: [],\n      distance: [],\n      duration: []\n    };\n    return _this;\n  }\n\n  _createClass(TimeSeries, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data, names, date, calorie, step, distance, duration;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ajax(\"/dailyEvents/walking\");\n\n              case 2:\n                data = _context.sent;\n                names = ['date', 'calorie', 'step', 'distance', 'duration'];\n                date = [];\n                calorie = [];\n                step = [];\n                distance = [];\n                duration = [];\n                data.forEach(function (d) {\n                  date.push(d.date);\n                  calorie.push(d.calorie);\n                  step.push(d.step);\n                  distance.push(d.distance);\n                  duration.push(d.duration);\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = {\n        labels: ['1', '2', '3', '4', '5', '6'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          fill: false,\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgba(255, 99, 132, 0.2)'\n        }, {\n          label: '# of Votes2',\n          data: [24, 19, 3, 5, 2, 3],\n          fill: false,\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgba(255, 99, 132, 0.2)'\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '40%',\n          width: '40%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return TimeSeries;\n}(React.Component);\n\nexport { TimeSeries as default };","map":{"version":3,"sources":["/Users/ycx/Documents/5500/cs5500/src/TimeSeries.js"],"names":["React","Line","ajax","Width","document","documentElement","clientWidth","TimeSeries","props","state","date","calorie","step","distance","duration","data","names","forEach","d","push","labels","datasets","label","fill","backgroundColor","borderColor","height","width","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAIC,KAAK,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAArC;;IACqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAFc;AASjB;;;;;wFAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBZ,IAAI,CAAC,sBAAD,CAD3B;;AAAA;AACUa,gBAAAA,IADV;AAEUC,gBAAAA,KAFV,GAEkB,CAAC,MAAD,EAAQ,SAAR,EAAkB,MAAlB,EAAyB,UAAzB,EAAoC,UAApC,CAFlB;AAGQN,gBAAAA,IAHR,GAGe,EAHf;AAIQC,gBAAAA,OAJR,GAIkB,EAJlB;AAKQC,gBAAAA,IALR,GAKe,EALf;AAMQC,gBAAAA,QANR,GAMmB,EANnB;AAOQC,gBAAAA,QAPR,GAOmB,EAPnB;AAQIC,gBAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,CAAC,EAAI;AACdR,kBAAAA,IAAI,CAACS,IAAL,CAAUD,CAAC,CAACR,IAAZ;AACAC,kBAAAA,OAAO,CAACQ,IAAR,CAAaD,CAAC,CAACP,OAAf;AACAC,kBAAAA,IAAI,CAACO,IAAL,CAAUD,CAAC,CAACN,IAAZ;AACAC,kBAAAA,QAAQ,CAACM,IAAT,CAAcD,CAAC,CAACL,QAAhB;AACAC,kBAAAA,QAAQ,CAACK,IAAT,CAAcD,CAAC,CAACJ,QAAhB;AACH,iBAND;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAkBA,kBAAS;AACL,UAAMC,IAAI,GAAG;AACTK,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CADC;AAETC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEP,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEQ,UAAAA,IAAI,EAAE,KAHR;AAIEC,UAAAA,eAAe,EAAE,mBAJnB;AAKEC,UAAAA,WAAW,EAAE;AALf,SADQ,EAQR;AACEH,UAAAA,KAAK,EAAE,aADT;AAEEP,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEQ,UAAAA,IAAI,EAAE,KAHR;AAIEC,UAAAA,eAAe,EAAE,mBAJnB;AAKEC,UAAAA,WAAW,EAAE;AALf,SARQ;AAFD,OAAb;AAmBA,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,KAAV;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAAZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEZ;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;;;EAxDmCf,KAAK,CAAC4B,S;;SAAzBrB,U","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport ajax from './ajax';\n\nvar Width = document.documentElement.clientWidth;\nexport default class TimeSeries extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            date: [],\n            calorie: [],\n            step: [],\n            distance: [],\n            duration: []\n        };\n    }\n\n    async componentDidMount() {\n        const data = await ajax(\"/dailyEvents/walking\");\n        const names = ['date','calorie','step','distance','duration'];\n        let date = [];\n        let calorie = [];\n        let step = [];\n        let distance = [];\n        let duration = [];\n        data.forEach(d => {\n            date.push(d.date);\n            calorie.push(d.calorie);\n            step.push(d.step);\n            distance.push(d.distance);\n            duration.push(d.duration);\n        });\n        \n    }\n\n    render() {\n        const data = {\n            labels: ['1', '2', '3', '4', '5', '6'],\n            datasets: [\n              {\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 0.2)',\n              },\n              {\n                label: '# of Votes2',\n                data: [24, 19, 3, 5, 2, 3],\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 0.2)',\n              },\n            ],\n          };\n        return (\n            <div style={{ height: '40%', width: '40%'}}>\n                <Line data={data}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}